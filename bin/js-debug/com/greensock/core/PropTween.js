/**
 * Generated by Apache Royale Compiler from com\greensock\core\PropTween.as
 * com.greensock.core.PropTween
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.greensock.core.PropTween');
/* Royale Dependency List: XML,org.apache.royale.utils.Language*/



/**
 * Constructor
 * 
 * @asparam target Target object
 * @asparam property Name of the property that is being tweened on the target (for plugins, this is always "setRatio", but the actual property name of the orignal target is stored in the "n" property of the PropTween instance)
 * @asparam start Starting value
 * @asparam change Amount to change (basically, the difference between the starting value and ending value)
 * @asparam name The name associated with the original target property. Typically this is the same as PropTween.p but for TweenPlugin tweens it is often different. For example an autoAlpha tween would create a PropTween of the AutoAlphaPlugin instance and p would be "setRatio", but n would be "autoAlpha".
 * @asparam isPlugin Indicates whether or not the target is a TweenPlugin.
 * @asparam nextNode Next PropTween in the linked list
 * @asparam priority Priority in the rendering queue. The lower the value the later it will be tweened. The default value is 0, but some plugins must be rendered later (or earlier).
 * @constructor
 * @param {Object} target
 * @param {string} property
 * @param {number} start
 * @param {number} change
 * @param {string} name
 * @param {boolean} isPlugin
 * @param {com.greensock.core.PropTween=} next
 * @param {number=} priority
 */
com.greensock.core.PropTween = function(target, property, start, change, name, isPlugin, next, priority) {
  next = typeof next !== 'undefined' ? next : null;
  priority = typeof priority !== 'undefined' ? priority : 0;
  this.t = target;
  this.p = property;
  this.s = start;
  this.c = change;
  this.n = name;
  this.f = org.apache.royale.utils.Language.is(target[property], Function);
  this.pg = isPlugin;
  if (next) {
    next._prev = this;
    this._next = next;
  }
  this.pr = priority;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('com.greensock.core.PropTween', com.greensock.core.PropTween);


/**
 * @export
 * @type {Object}
 */
com.greensock.core.PropTween.prototype.t;


/**
 * @export
 * @type {string}
 */
com.greensock.core.PropTween.prototype.p;


/**
 * @export
 * @type {number}
 */
com.greensock.core.PropTween.prototype.s;


/**
 * @export
 * @type {number}
 */
com.greensock.core.PropTween.prototype.c;


/**
 * @export
 * @type {boolean}
 */
com.greensock.core.PropTween.prototype.f;


/**
 * @export
 * @type {number}
 */
com.greensock.core.PropTween.prototype.pr = 0;


/**
 * @export
 * @type {boolean}
 */
com.greensock.core.PropTween.prototype.pg;


/**
 * @export
 * @type {string}
 */
com.greensock.core.PropTween.prototype.n;


/**
 * @export
 * @type {boolean}
 */
com.greensock.core.PropTween.prototype.r;


/**
 * @export
 * @type {com.greensock.core.PropTween}
 */
com.greensock.core.PropTween.prototype._next;


/**
 * @export
 * @type {com.greensock.core.PropTween}
 */
com.greensock.core.PropTween.prototype._prev;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.greensock.core.PropTween.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PropTween', qName: 'com.greensock.core.PropTween', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.greensock.core.PropTween.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        't': { type: 'Object'},
        'p': { type: 'String'},
        's': { type: 'Number'},
        'c': { type: 'Number'},
        'f': { type: 'Boolean'},
        'pr': { type: 'int'},
        'pg': { type: 'Boolean'},
        'n': { type: 'String'},
        'r': { type: 'Boolean'},
        '_next': { type: 'com.greensock.core.PropTween'},
        '_prev': { type: 'com.greensock.core.PropTween'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'PropTween': { type: '', declaredBy: 'com.greensock.core.PropTween', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'String', optional: false },{ index: 3, type: 'Number', optional: false },{ index: 4, type: 'Number', optional: false },{ index: 5, type: 'String', optional: false },{ index: 6, type: 'Boolean', optional: false },{ index: 7, type: 'com.greensock.core.PropTween', optional: true },{ index: 8, type: 'int', optional: true } ]; }}
      };
    }
  };
};
