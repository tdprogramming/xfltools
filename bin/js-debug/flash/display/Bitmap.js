/**
 * Generated by Apache Royale Compiler from flash\display\Bitmap.as
 * flash.display.Bitmap
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.Bitmap');
/* Royale Dependency List: flash.display.BitmapData,XML*/

goog.require('flash.display.DisplayObject');



/**
 * @constructor
 * @extends {flash.display.DisplayObject}
 * @param {flash.display.BitmapData=} bitmapData
 * @param {string=} pixelSnapping
 * @param {boolean=} smoothing
 */
flash.display.Bitmap = function(bitmapData, pixelSnapping, smoothing) {
  flash.display.Bitmap.base(this, 'constructor');
  bitmapData = typeof bitmapData !== 'undefined' ? bitmapData : null;
  pixelSnapping = typeof pixelSnapping !== 'undefined' ? pixelSnapping : "auto";
  smoothing = typeof smoothing !== 'undefined' ? smoothing : false;
  if (bitmapData) {
    this._javascriptImplementation = window["flashjs_display_Bitmap_construct"](bitmapData.canvas);
  }
};
goog.inherits(flash.display.Bitmap, flash.display.DisplayObject);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('flash.display.Bitmap', flash.display.Bitmap);


/**
 * @export
 * @type {flash.display.BitmapData}
 */
flash.display.Bitmap.prototype.bitmapData;


/**
 * @export
 * @type {string}
 */
flash.display.Bitmap.prototype.pixelSnapping;


/**
 * @export
 * @type {boolean}
 */
flash.display.Bitmap.prototype.smoothing;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.Bitmap.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Bitmap', qName: 'flash.display.Bitmap', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.Bitmap.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'bitmapData': { type: 'flash.display.BitmapData'},
        'pixelSnapping': { type: 'String'},
        'smoothing': { type: 'Boolean'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'Bitmap': { type: '', declaredBy: 'flash.display.Bitmap', parameters: function () { return [  { index: 1, type: 'flash.display.BitmapData', optional: true },{ index: 2, type: 'String', optional: true },{ index: 3, type: 'Boolean', optional: true } ]; }}
      };
    }
  };
};
