/**
 * Generated by Apache Royale Compiler from flash\display\GraphicsStroke.as
 * flash.display.GraphicsStroke
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.GraphicsStroke');
/* Royale Dependency List: flash.display.IGraphicsFill,XML*/

goog.require('flash.display.IGraphicsData');
goog.require('flash.display.IGraphicsStroke');



/**
 * @constructor
 * @implements {flash.display.IGraphicsStroke}
 * @implements {flash.display.IGraphicsData}
 * @param {number=} thickness
 * @param {boolean=} pixelHinting
 * @param {string=} scaleMode
 * @param {string=} caps
 * @param {string=} joints
 * @param {number=} miterLimit
 * @param {flash.display.IGraphicsFill=} fill
 */
flash.display.GraphicsStroke = function(thickness, pixelHinting, scaleMode, caps, joints, miterLimit, fill) {
  thickness = typeof thickness !== 'undefined' ? thickness : NaN;
  pixelHinting = typeof pixelHinting !== 'undefined' ? pixelHinting : false;
  scaleMode = typeof scaleMode !== 'undefined' ? scaleMode : "normal";
  caps = typeof caps !== 'undefined' ? caps : "none";
  joints = typeof joints !== 'undefined' ? joints : "round";
  miterLimit = typeof miterLimit !== 'undefined' ? miterLimit : 3.0;
  fill = typeof fill !== 'undefined' ? fill : null;
  this.caps = caps;
  this.fill = fill;
  this.joints = joints;
  this.miterLimit = miterLimit;
  this.pixelHinting = pixelHinting;
  this.scaleMode = scaleMode;
  this.thickness = thickness;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('flash.display.GraphicsStroke', flash.display.GraphicsStroke);


/**
 * @export
 * @type {string}
 */
flash.display.GraphicsStroke.prototype.caps;


/**
 * @export
 * @type {flash.display.IGraphicsFill}
 */
flash.display.GraphicsStroke.prototype.fill;


/**
 * @export
 * @type {string}
 */
flash.display.GraphicsStroke.prototype.joints;


/**
 * @export
 * @type {number}
 */
flash.display.GraphicsStroke.prototype.miterLimit;


/**
 * @export
 * @type {boolean}
 */
flash.display.GraphicsStroke.prototype.pixelHinting;


/**
 * @export
 * @type {string}
 */
flash.display.GraphicsStroke.prototype.scaleMode;


/**
 * @export
 * @type {number}
 */
flash.display.GraphicsStroke.prototype.thickness;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.GraphicsStroke.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GraphicsStroke', qName: 'flash.display.GraphicsStroke', kind: 'class' }], interfaces: [flash.display.IGraphicsStroke, flash.display.IGraphicsData] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.GraphicsStroke.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'caps': { type: 'String'},
        'fill': { type: 'flash.display.IGraphicsFill'},
        'joints': { type: 'String'},
        'miterLimit': { type: 'Number'},
        'pixelHinting': { type: 'Boolean'},
        'scaleMode': { type: 'String'},
        'thickness': { type: 'Number'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'GraphicsStroke': { type: '', declaredBy: 'flash.display.GraphicsStroke', parameters: function () { return [  { index: 1, type: 'Number', optional: true },{ index: 2, type: 'Boolean', optional: true },{ index: 3, type: 'String', optional: true },{ index: 4, type: 'String', optional: true },{ index: 5, type: 'String', optional: true },{ index: 6, type: 'Number', optional: true },{ index: 7, type: 'flash.display.IGraphicsFill', optional: true } ]; }}
      };
    }
  };
};
