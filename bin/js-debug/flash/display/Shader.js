/**
 * Generated by Apache Royale Compiler from flash\display\Shader.as
 * flash.display.Shader
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.Shader');
/* Royale Dependency List: flash.display.ShaderData,flash.utils.ByteArray,XML*/




/**
 * @constructor
 * @param {flash.utils.ByteArray=} code
 */
flash.display.Shader = function(code) {
  code = typeof code !== 'undefined' ? code : null;
  this.byteCode = code;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('flash.display.Shader', flash.display.Shader);


/**
 * @export
 * @type {flash.utils.ByteArray}
 */
flash.display.Shader.prototype.byteCode;


/**
 * @export
 * @type {flash.display.ShaderData}
 */
flash.display.Shader.prototype.data;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.Shader.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Shader', qName: 'flash.display.Shader', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.Shader.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'byteCode': { type: 'flash.utils.ByteArray'},
        'data': { type: 'flash.display.ShaderData'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'Shader': { type: '', declaredBy: 'flash.display.Shader', parameters: function () { return [  { index: 1, type: 'flash.utils.ByteArray', optional: true } ]; }}
      };
    }
  };
};
