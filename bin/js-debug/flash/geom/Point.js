/**
 * Generated by Apache Royale Compiler from flash\geom\Point.as
 * flash.geom.Point
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.geom.Point');
/* Royale Dependency List: XML*/

goog.require('org.xfltools.core.FlashJSObject');



/**
 * @constructor
 * @extends {org.xfltools.core.FlashJSObject}
 * @param {number=} x
 * @param {number=} y
 */
flash.geom.Point = function(x, y) {
  flash.geom.Point.base(this, 'constructor');
  x = typeof x !== 'undefined' ? x : 0;
  y = typeof y !== 'undefined' ? y : 0;
  this._javascriptImplementation = window["flashjs_geom_Point_construct"](x, y);
};
goog.inherits(flash.geom.Point, org.xfltools.core.FlashJSObject);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('flash.geom.Point', flash.geom.Point);


/**
 * @export
 * @type {number}
 */
flash.geom.Point.prototype.length;


/**
 * @export
 * @param {flash.geom.Point} v
 * @return {flash.geom.Point}
 */
flash.geom.Point.prototype.add = function(v) {
  return new flash.geom.Point();
};


/**
 * @export
 * @return {flash.geom.Point}
 */
flash.geom.Point.prototype.clone = function() {
  var /** @type {Object} */ cloneResult = this._javascriptImplementation.clone();
  return new flash.geom.Point(cloneResult.x, cloneResult.y);
};


/**
 * @export
 * @param {flash.geom.Point} sourcePoint
 */
flash.geom.Point.prototype.copyFrom = function(sourcePoint) {
  this.x = sourcePoint.x;
  this.y = sourcePoint.y;
};


/**
 * @export
 * @param {flash.geom.Point} pt1
 * @param {flash.geom.Point} pt2
 * @return {number}
 */
flash.geom.Point.distance = function(pt1, pt2) {
  return 0;
};


/**
 * @export
 * @param {flash.geom.Point} toCompare
 * @return {boolean}
 */
flash.geom.Point.prototype.equals = function(toCompare) {
  return this.x == toCompare.x && this.y == toCompare.y;
};


/**
 * @export
 * @param {flash.geom.Point} pt1
 * @param {flash.geom.Point} pt2
 * @param {number} f
 * @return {flash.geom.Point}
 */
flash.geom.Point.interpolate = function(pt1, pt2, f) {
  return new flash.geom.Point();
};


/**
 * @export
 * @param {number} thickness
 */
flash.geom.Point.prototype.normalize = function(thickness) {
};


/**
 * @export
 * @param {number} dx
 * @param {number} dy
 */
flash.geom.Point.prototype.offset = function(dx, dy) {
};


/**
 * @export
 * @param {number} len
 * @param {number} angle
 * @return {flash.geom.Point}
 */
flash.geom.Point.polar = function(len, angle) {
  return new flash.geom.Point();
};


/**
 * @export
 * @param {number} xa
 * @param {number} ya
 */
flash.geom.Point.prototype.setTo = function(xa, ya) {
  this.x = xa;
  this.y = ya;
};


/**
 * @export
 * @param {flash.geom.Point} v
 * @return {flash.geom.Point}
 */
flash.geom.Point.prototype.subtract = function(v) {
  return new flash.geom.Point();
};


flash.geom.Point.prototype.get__x = function() {
  return this._javascriptImplementation.x;
};


flash.geom.Point.prototype.set__x = function(newValue) {
  this._javascriptImplementation.x = newValue;
};


flash.geom.Point.prototype.get__y = function() {
  return this._javascriptImplementation.y;
};


flash.geom.Point.prototype.set__y = function(newValue) {
  this._javascriptImplementation.y = newValue;
};


Object.defineProperties(flash.geom.Point.prototype, /** @lends {flash.geom.Point.prototype} */ {
/**
  * @export
  * @type {number} */
x: {
get: flash.geom.Point.prototype.get__x,
set: flash.geom.Point.prototype.set__x},
/**
  * @export
  * @type {number} */
y: {
get: flash.geom.Point.prototype.get__y,
set: flash.geom.Point.prototype.set__y}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.geom.Point.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Point', qName: 'flash.geom.Point', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.geom.Point.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'length': { type: 'Number'}
      };
    },
    accessors: function () {
      return {
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Point'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Point'}
      };
    },
    methods: function () {
      return {
        'Point': { type: '', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'Number', optional: true },{ index: 2, type: 'Number', optional: true } ]; }},
        'add': { type: 'flash.geom.Point', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        'clone': { type: 'flash.geom.Point', declaredBy: 'flash.geom.Point'},
        'copyFrom': { type: 'void', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        '|distance': { type: 'Number', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false },{ index: 2, type: 'flash.geom.Point', optional: false } ]; }},
        'equals': { type: 'Boolean', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        '|interpolate': { type: 'flash.geom.Point', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false },{ index: 2, type: 'flash.geom.Point', optional: false },{ index: 3, type: 'Number', optional: false } ]; }},
        'normalize': { type: 'void', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }},
        'offset': { type: 'void', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        '|polar': { type: 'flash.geom.Point', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'setTo': { type: 'void', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'subtract': { type: 'flash.geom.Point', declaredBy: 'flash.geom.Point', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }}
      };
    }
  };
};
