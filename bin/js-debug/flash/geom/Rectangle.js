/**
 * Generated by Apache Royale Compiler from flash\geom\Rectangle.as
 * flash.geom.Rectangle
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.geom.Rectangle');
/* Royale Dependency List: flash.geom.Point,XML*/

goog.require('org.xfltools.core.FlashJSObject');



/**
 * @flexjsignorecoercion createjs.Rectangle
 * @constructor
 * @extends {org.xfltools.core.FlashJSObject}
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 */
flash.geom.Rectangle = function(x, y, width, height) {
  flash.geom.Rectangle.base(this, 'constructor');
  x = typeof x !== 'undefined' ? x : 0;
  y = typeof y !== 'undefined' ? y : 0;
  width = typeof width !== 'undefined' ? width : 0;
  height = typeof height !== 'undefined' ? height : 0;
  this._javascriptImplementation = window["flashjs_geom_Rectangle_construct"](x, y, width, height);
};
goog.inherits(flash.geom.Rectangle, org.xfltools.core.FlashJSObject);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('flash.geom.Rectangle', flash.geom.Rectangle);


/**
 * @private
 * @type {Object}
 */
flash.geom.Rectangle.prototype._javascriptImplementation;


/**
 * @export
 * @type {number}
 */
flash.geom.Rectangle.prototype.bottom;


/**
 * @export
 * @type {flash.geom.Point}
 */
flash.geom.Rectangle.prototype.bottomRight;


/**
 * @export
 * @type {number}
 */
flash.geom.Rectangle.prototype.left;


/**
 * @export
 * @type {number}
 */
flash.geom.Rectangle.prototype.right;


/**
 * @export
 * @type {flash.geom.Point}
 */
flash.geom.Rectangle.prototype.size;


/**
 * @export
 * @type {number}
 */
flash.geom.Rectangle.prototype.top;


/**
 * @export
 * @type {flash.geom.Point}
 */
flash.geom.Rectangle.prototype.topLeft;


/**
 * @export
 * @return {flash.geom.Rectangle}
 */
flash.geom.Rectangle.prototype.clone = function() {
  return new flash.geom.Rectangle(this.x, this.y, this.width, this.height);
};


/**
 * @export
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.contains = function(x, y) {
  return this._javascriptImplementation.contains(x, y);
};


/**
 * @export
 * @param {flash.geom.Point} point
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.containsPoint = function(point) {
  return this.contains(point.x, point.y);
};


/**
 * @export
 * @param {flash.geom.Rectangle} rect
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.containsRect = function(rect) {
  return this._javascriptImplementation.contains(rect.x, rect.y, rect.width, rect.height);
};


/**
 * @export
 * @param {flash.geom.Rectangle} sourceRect
 */
flash.geom.Rectangle.prototype.copyFrom = function(sourceRect) {
  this.x = sourceRect.x;
  this.y = sourceRect.y;
  this.width = sourceRect.width;
  this.height = sourceRect.height;
};


/**
 * @export
 * @param {flash.geom.Rectangle} toCompare
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.equals = function(toCompare) {
  return this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
};


/**
 * @export
 * @param {number} dx
 * @param {number} dy
 */
flash.geom.Rectangle.prototype.inflate = function(dx, dy) {
};


/**
 * @export
 * @param {flash.geom.Point} point
 */
flash.geom.Rectangle.prototype.inflatePoint = function(point) {
};


/**
 * @export
 * @param {flash.geom.Rectangle} toIntersect
 * @return {flash.geom.Rectangle}
 */
flash.geom.Rectangle.prototype.intersection = function(toIntersect) {
  var /** @type {Object} */ intersectionResult = this._javascriptImplementation.intersection(toIntersect.javascriptImplementation);
  return new flash.geom.Rectangle(intersectionResult.x, intersectionResult.y, intersectionResult.width, intersectionResult.height);
};


/**
 * @export
 * @param {flash.geom.Rectangle} toIntersect
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.intersects = function(toIntersect) {
  return this._javascriptImplementation.intersects(toIntersect.javascriptImplementation);
};


/**
 * @export
 * @return {boolean}
 */
flash.geom.Rectangle.prototype.isEmpty = function() {
  return this._javascriptImplementation.isEmpty();
};


/**
 * @export
 * @param {number} dx
 * @param {number} dy
 */
flash.geom.Rectangle.prototype.offset = function(dx, dy) {
  this.x += dx;
  this.y += dy;
};


/**
 * @export
 * @param {flash.geom.Point} point
 */
flash.geom.Rectangle.prototype.offsetPoint = function(point) {
  this.offset(point.x, point.y);
};


/**
 * @export
 */
flash.geom.Rectangle.prototype.setEmpty = function() {
  this._javascriptImplementation.setValues(0, 0, 0, 0);
};


/**
 * @export
 * @param {number} xa
 * @param {number} ya
 * @param {number} widtha
 * @param {number} heighta
 */
flash.geom.Rectangle.prototype.setTo = function(xa, ya, widtha, heighta) {
  this._javascriptImplementation.setValues(xa, ya, widtha, heighta);
};


/**
 * @export
 * @param {flash.geom.Rectangle} toUnion
 * @return {flash.geom.Rectangle}
 */
flash.geom.Rectangle.prototype.union = function(toUnion) {
  var /** @type {Object} */ unionResult = this._javascriptImplementation.union(toUnion.javascriptImplementation);
  return new flash.geom.Rectangle(unionResult.x, unionResult.y, unionResult.width, unionResult.height);
};


flash.geom.Rectangle.prototype.get__height = function() {
  return this._javascriptImplementation.height;
};


flash.geom.Rectangle.prototype.set__height = function(newValue) {
  this._javascriptImplementation.height = newValue;
};


flash.geom.Rectangle.prototype.get__width = function() {
  return this._javascriptImplementation.width;
};


flash.geom.Rectangle.prototype.set__width = function(newValue) {
  this._javascriptImplementation.width = newValue;
};


flash.geom.Rectangle.prototype.get__x = function() {
  return this._javascriptImplementation.x;
};


flash.geom.Rectangle.prototype.set__x = function(newValue) {
  this._javascriptImplementation.x = newValue;
};


flash.geom.Rectangle.prototype.get__y = function() {
  return this._javascriptImplementation.y;
};


flash.geom.Rectangle.prototype.set__y = function(newValue) {
  this._javascriptImplementation.y = newValue;
};


Object.defineProperties(flash.geom.Rectangle.prototype, /** @lends {flash.geom.Rectangle.prototype} */ {
/**
  * @export
  * @type {number} */
height: {
get: flash.geom.Rectangle.prototype.get__height,
set: flash.geom.Rectangle.prototype.set__height},
/**
  * @export
  * @type {number} */
width: {
get: flash.geom.Rectangle.prototype.get__width,
set: flash.geom.Rectangle.prototype.set__width},
/**
  * @export
  * @type {number} */
x: {
get: flash.geom.Rectangle.prototype.get__x,
set: flash.geom.Rectangle.prototype.set__x},
/**
  * @export
  * @type {number} */
y: {
get: flash.geom.Rectangle.prototype.get__y,
set: flash.geom.Rectangle.prototype.set__y}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.geom.Rectangle.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Rectangle', qName: 'flash.geom.Rectangle', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.geom.Rectangle.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'bottom': { type: 'Number'},
        'bottomRight': { type: 'flash.geom.Point'},
        'left': { type: 'Number'},
        'right': { type: 'Number'},
        'size': { type: 'flash.geom.Point'},
        'top': { type: 'Number'},
        'topLeft': { type: 'flash.geom.Point'}
      };
    },
    accessors: function () {
      return {
        'height': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Rectangle'},
        'width': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Rectangle'},
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Rectangle'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.Rectangle'}
      };
    },
    methods: function () {
      return {
        'Rectangle': { type: '', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'Number', optional: true },{ index: 2, type: 'Number', optional: true },{ index: 3, type: 'Number', optional: true },{ index: 4, type: 'Number', optional: true } ]; }},
        'clone': { type: 'flash.geom.Rectangle', declaredBy: 'flash.geom.Rectangle'},
        'contains': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'containsPoint': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        'containsRect': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }},
        'copyFrom': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }},
        'equals': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }},
        'inflate': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'inflatePoint': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        'intersection': { type: 'flash.geom.Rectangle', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }},
        'intersects': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }},
        'isEmpty': { type: 'Boolean', declaredBy: 'flash.geom.Rectangle'},
        'offset': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'offsetPoint': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Point', optional: false } ]; }},
        'setEmpty': { type: 'void', declaredBy: 'flash.geom.Rectangle'},
        'setTo': { type: 'void', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false },{ index: 3, type: 'Number', optional: false },{ index: 4, type: 'Number', optional: false } ]; }},
        'union': { type: 'flash.geom.Rectangle', declaredBy: 'flash.geom.Rectangle', parameters: function () { return [  { index: 1, type: 'flash.geom.Rectangle', optional: false } ]; }}
      };
    }
  };
};
