/**
 * Generated by Apache Royale Compiler from org\apache\royale\core\ContainerBaseStrandChildren.as
 * org.apache.royale.core.ContainerBaseStrandChildren
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.ContainerBaseStrandChildren');
/* Royale Dependency List: org.apache.royale.core.IChild,org.apache.royale.core.IStrandPrivate,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.IParent');



/**
 *  Constructor.
 *  
 *  @royaleignorecoercion org.apache.royale.core.ContainerBase
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @implements {org.apache.royale.core.IParent}
 * @param {org.apache.royale.core.IParent} owner
 */
org.apache.royale.core.ContainerBaseStrandChildren = function(owner) {
  ;
  this.owner = org.apache.royale.utils.Language.as(owner, org.apache.royale.core.IStrandPrivate);
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.ContainerBaseStrandChildren', org.apache.royale.core.ContainerBaseStrandChildren);


/**
 * @export
 * @type {org.apache.royale.core.IStrandPrivate}
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.owner;


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.owner.$addElement(c, dispatchEvent);
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {number} index
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.owner.$addElementAt(c, index, dispatchEvent);
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.owner.$removeElement(c, dispatchEvent);
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @return {number}
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.getElementIndex = function(c) {
  return this.owner.$getElementIndex(c);
};


/**
 *  @asprivate
 * @export
 * @param {number} index
 * @return {org.apache.royale.core.IChild}
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.getElementAt = function(index) {
  return this.owner.$getElementAt(index);
};


org.apache.royale.core.ContainerBaseStrandChildren.prototype.get__numElements = function() {
  return this.owner.$numElements();
};


Object.defineProperties(org.apache.royale.core.ContainerBaseStrandChildren.prototype, /** @lends {org.apache.royale.core.ContainerBaseStrandChildren.prototype} */ {
/**
  * @export
  * @type {number} */
numElements: {
get: org.apache.royale.core.ContainerBaseStrandChildren.prototype.get__numElements}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ContainerBaseStrandChildren', qName: 'org.apache.royale.core.ContainerBaseStrandChildren', kind: 'class' }], interfaces: [org.apache.royale.core.IParent] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.ContainerBaseStrandChildren.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'owner': { type: 'org.apache.royale.core.IStrandPrivate'}
      };
    },
    accessors: function () {
      return {
        'numElements': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren'}
      };
    },
    methods: function () {
      return {
        'ContainerBaseStrandChildren': { type: '', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IParent', optional: false } ]; }},
        'addElement': { type: 'void', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'addElementAt': { type: 'void', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'int', optional: false },{ index: 3, type: 'Boolean', optional: true } ]; }},
        'removeElement': { type: 'void', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IChild', optional: false } ]; }},
        'getElementAt': { type: 'org.apache.royale.core.IChild', declaredBy: 'org.apache.royale.core.ContainerBaseStrandChildren', parameters: function () { return [  { index: 1, type: 'int', optional: false } ]; }}
      };
    }
  };
};
