/**
 * Generated by Apache Royale Compiler from org\apache\royale\core\DataContainerBase.as
 * org.apache.royale.core.DataContainerBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.DataContainerBase');
/* Royale Dependency List: org.apache.royale.core.IChild,org.apache.royale.core.IDataProviderItemRendererMapper,org.apache.royale.core.IFactory,org.apache.royale.core.IItemRenderer,org.apache.royale.core.IItemRendererClassFactory,org.apache.royale.core.ValuesManager,org.apache.royale.events.Event,org.apache.royale.events.ItemAddedEvent,org.apache.royale.events.ItemRemovedEvent,org.apache.royale.html.beads.IListView,org.apache.royale.html.supportClasses.DataItemRenderer,org.apache.royale.utils.loadBeadFromValuesManager,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.ContainerBase');
goog.require('org.apache.royale.core.IItemRendererParent');
goog.require('org.apache.royale.core.IList');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.ContainerBase}
 * @implements {org.apache.royale.core.IItemRendererParent}
 * @implements {org.apache.royale.core.IList}
 */
org.apache.royale.core.DataContainerBase = function() {
  org.apache.royale.core.DataContainerBase.base(this, 'constructor');
};
goog.inherits(org.apache.royale.core.DataContainerBase, org.apache.royale.core.ContainerBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.DataContainerBase', org.apache.royale.core.DataContainerBase);


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.core.DataContainerBase.prototype._DCinitialized;


/**
 * @asprivate
 * @export
 * @override
 */
org.apache.royale.core.DataContainerBase.prototype.addedToParent = function() {
  if (!this._DCinitialized) {
    org.apache.royale.core.ValuesManager["valuesImpl"].init(this);
    this._DCinitialized = true;
  }
  org.apache.royale.core.DataContainerBase.superClass_.addedToParent.apply(this);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IDataProviderItemRendererMapper, "iDataProviderItemRendererMapper", this);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IItemRendererClassFactory, "iItemRendererClassFactory", this);
  this.dispatchEvent(new org.apache.royale.events.Event("initComplete"));
};


/**
 * @private
 * @type {org.apache.royale.core.IFactory}
 */
org.apache.royale.core.DataContainerBase.prototype._itemRenderer;


/**
 * @copy org.apache.royale.core.IItemRendererParent#addItemRenderer()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @param {org.apache.royale.core.IItemRenderer} renderer
 */
org.apache.royale.core.DataContainerBase.prototype.addItemRenderer = function(renderer) {
  this.addElement(renderer, true);
  var /** @type {org.apache.royale.events.ItemAddedEvent} */ newEvent = new org.apache.royale.events.ItemAddedEvent("itemAdded");
  newEvent.item = renderer;
  this.dispatchEvent(newEvent);
};


/**
 * @copy org.apache.royale.core.IItemRendererParent#addItemRendererAt()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9
 * @export
 * @param {org.apache.royale.core.IItemRenderer} renderer
 * @param {number} index
 */
org.apache.royale.core.DataContainerBase.prototype.addItemRendererAt = function(renderer, index) {
  this.addElementAt(renderer, index, true);
  var /** @type {org.apache.royale.events.ItemAddedEvent} */ newEvent = new org.apache.royale.events.ItemAddedEvent("itemAdded");
  newEvent.item = renderer;
  this.dispatchEvent(newEvent);
};


/**
 * @copy org.apache.royale.core.IItemRendererParent#removeItemRenderer()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @param {org.apache.royale.core.IItemRenderer} renderer
 */
org.apache.royale.core.DataContainerBase.prototype.removeItemRenderer = function(renderer) {
  this.removeElement(renderer);
  var /** @type {org.apache.royale.events.ItemRemovedEvent} */ newEvent = new org.apache.royale.events.ItemRemovedEvent("itemRemoved");
  newEvent.item = renderer;
  this.dispatchEvent(newEvent);
};


/**
 * @copy org.apache.royale.core.IItemRendererParent#removeAllItemRenderers()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 */
org.apache.royale.core.DataContainerBase.prototype.removeAllItemRenderers = function() {
  while (this.numElements > 0) {
    var /** @type {org.apache.royale.core.IChild} */ child = this.getElementAt(0);
    this.removeElement(child);
  }
};


/**
 *  @copy org.apache.royale.core.IItemRendererParent#getItemRendererForIndex()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @param {number} index
 * @return {org.apache.royale.core.IItemRenderer}
 */
org.apache.royale.core.DataContainerBase.prototype.getItemRendererForIndex = function(index) {
  if (index < 0 || index >= this.numElements)
    return null;
  return org.apache.royale.utils.Language.as(this.getElementAt(index), org.apache.royale.core.IItemRenderer);
};


/**
 *  Refreshes the itemRenderers. Useful after a size change by the data group.
 *
 *  @copy org.apache.royale.core.IItemRendererParent#updateAllItemRenderers()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 */
org.apache.royale.core.DataContainerBase.prototype.updateAllItemRenderers = function() {
  var /** @type {number} */ n = this.numElements;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {org.apache.royale.html.supportClasses.DataItemRenderer} */ renderer = org.apache.royale.utils.Language.as(this.getItemRendererForIndex(i), org.apache.royale.html.supportClasses.DataItemRenderer);
    if (renderer) {
      renderer.setWidth(this.width, true);
      renderer.adjustSize();
    }
  }
};


org.apache.royale.core.DataContainerBase.prototype.get__dataGroup = function() {
  return org.apache.royale.utils.Language.as(this.view, org.apache.royale.html.beads.IListView).dataGroup;
};


org.apache.royale.core.DataContainerBase.prototype.get__itemRenderer = function() {
  return this._itemRenderer;
};


org.apache.royale.core.DataContainerBase.prototype.set__itemRenderer = function(value) {
  this._itemRenderer = value;
};


org.apache.royale.core.DataContainerBase.prototype.get__hasItemRenderer = function() {
  var /** @type {boolean} */ result = false;
  
  var /** @type {*} */ test = this._itemRenderer;
  result = this._itemRenderer !== null && test !== undefined;
  return result;
};


Object.defineProperties(org.apache.royale.core.DataContainerBase.prototype, /** @lends {org.apache.royale.core.DataContainerBase.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IItemRendererParent} */
dataGroup: {
get: org.apache.royale.core.DataContainerBase.prototype.get__dataGroup},
/**
  * @export
  * @type {org.apache.royale.core.IFactory} */
itemRenderer: {
get: org.apache.royale.core.DataContainerBase.prototype.get__itemRenderer,
set: org.apache.royale.core.DataContainerBase.prototype.set__itemRenderer},
/**
  * @export
  * @type {boolean} */
hasItemRenderer: {
get: org.apache.royale.core.DataContainerBase.prototype.get__hasItemRenderer}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.DataContainerBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataContainerBase', qName: 'org.apache.royale.core.DataContainerBase', kind: 'class' }], interfaces: [org.apache.royale.core.IItemRendererParent, org.apache.royale.core.IList] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.DataContainerBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'dataGroup': { type: 'org.apache.royale.core.IItemRendererParent', access: 'readonly', declaredBy: 'org.apache.royale.core.DataContainerBase'},
        'itemRenderer': { type: 'org.apache.royale.core.IFactory', access: 'readwrite', declaredBy: 'org.apache.royale.core.DataContainerBase'},
        'hasItemRenderer': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.core.DataContainerBase'}
      };
    },
    methods: function () {
      return {
        'DataContainerBase': { type: '', declaredBy: 'org.apache.royale.core.DataContainerBase'},
        'addedToParent': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase'},
        'addItemRenderer': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IItemRenderer', optional: false } ]; }},
        'addItemRendererAt': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IItemRenderer', optional: false },{ index: 2, type: 'int', optional: false } ]; }},
        'removeItemRenderer': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IItemRenderer', optional: false } ]; }},
        'removeAllItemRenderers': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase'},
        'getItemRendererForIndex': { type: 'org.apache.royale.core.IItemRenderer', declaredBy: 'org.apache.royale.core.DataContainerBase', parameters: function () { return [  { index: 1, type: 'int', optional: false } ]; }},
        'updateAllItemRenderers': { type: 'void', declaredBy: 'org.apache.royale.core.DataContainerBase'}
      };
    },
    metadata: function () { return [  ]; }
  };
};
