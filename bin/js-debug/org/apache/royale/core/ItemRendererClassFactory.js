/**
 * Generated by Apache Royale Compiler from org\apache\royale\core\ItemRendererClassFactory.as
 * org.apache.royale.core.ItemRendererClassFactory
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.ItemRendererClassFactory');
/* Royale Dependency List: org.apache.royale.core.ClassFactory,org.apache.royale.core.IFactory,org.apache.royale.core.IItemRenderer,org.apache.royale.core.IItemRendererParent,org.apache.royale.core.IItemRendererProvider,org.apache.royale.core.IParent,org.apache.royale.core.IStrand,org.apache.royale.core.ValuesManager,org.apache.royale.utils.MXMLDataInterpreter,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.Strand');
goog.require('org.apache.royale.core.IBead');
goog.require('org.apache.royale.core.IDocument');
goog.require('org.apache.royale.core.IItemRendererClassFactory');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.Strand}
 * @implements {org.apache.royale.core.IItemRendererClassFactory}
 * @implements {org.apache.royale.core.IDocument}
 * @implements {org.apache.royale.core.IBead}
 */
org.apache.royale.core.ItemRendererClassFactory = function() {
  
  this.createFunction = org.apache.royale.utils.Language.closure(this.createFromMXMLContent, this, 'createFromMXMLContent');
  org.apache.royale.core.ItemRendererClassFactory.base(this, 'constructor');
};
goog.inherits(org.apache.royale.core.ItemRendererClassFactory, org.apache.royale.core.Strand);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.ItemRendererClassFactory', org.apache.royale.core.ItemRendererClassFactory);


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype._strand;


/**
 * @export
 * @type {Array}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.mxmlContent;


/**
 *  @copy org.apache.royale.core.IItemRendererClassFactory#createItemRenderer()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IItemRendererParent} parent
 * @return {org.apache.royale.core.IItemRenderer}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.createItemRenderer = function(parent) {
  return this.createFunction(parent);
};


/**
 * @export
 * @type {Function}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.createFunction;


/**
 *  Creates an instance of an item renderer from child MXML tags.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @protected
 * @param {org.apache.royale.core.IItemRendererParent} parent
 * @return {org.apache.royale.core.IItemRenderer}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.createFromMXMLContent = function(parent) {
  return org.apache.royale.utils.MXMLDataInterpreter.generateMXMLArray(this.document, org.apache.royale.utils.Language.as(parent, org.apache.royale.core.IParent), this.MXMLDescriptor)[0];
};


/**
 * @export
 * @type {org.apache.royale.core.IFactory}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.itemRendererFactory;


/**
 *  Creates an instance of an item renderer from itemRendererFactory.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IItemRendererParent} parent
 * @return {org.apache.royale.core.IItemRenderer}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.createFromClass = function(parent) {
  var /** @type {org.apache.royale.core.IItemRenderer} */ renderer = this.itemRendererFactory.newInstance();
  renderer.itemRendererParent = parent;
  return renderer;
};


/**
 * @private
 * @type {Object}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.document;


/**
 *  @copy org.apache.royale.core.IDocument#setDocument()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {Object} document
 * @param {string=} id
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.setDocument = function(document, id) {
  id = typeof id !== 'undefined' ? id : null;
  this.document = document;
};


org.apache.royale.core.ItemRendererClassFactory.prototype.set__strand = function(value) {
  this._strand = value;
  if (org.apache.royale.utils.Language.is(this._strand, org.apache.royale.core.IItemRendererProvider) && org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IItemRendererProvider).hasItemRenderer) {
    this.itemRendererFactory = org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IItemRendererProvider).itemRenderer;
    this.createFunction = org.apache.royale.utils.Language.closure(this.createFromClass, this, 'createFromClass');
  } else {
    var /** @type {Object} */ itemRendererClass =  /** @type {Object|null} */ (org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this._strand, "iItemRenderer"));
    if (itemRendererClass) {
      this.itemRendererFactory = new org.apache.royale.core.ClassFactory(itemRendererClass);
      this.createFunction = org.apache.royale.utils.Language.closure(this.createFromClass, this, 'createFromClass');
    }
    else if (!this.MXMLDescriptor)
      this.createFunction = org.apache.royale.utils.Language.closure(this.createFromClass, this, 'createFromClass');
  }
};


org.apache.royale.core.ItemRendererClassFactory.prototype.get__MXMLDescriptor = function() {
  return null;
};


Object.defineProperties(org.apache.royale.core.ItemRendererClassFactory.prototype, /** @lends {org.apache.royale.core.ItemRendererClassFactory.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: org.apache.royale.core.ItemRendererClassFactory.prototype.set__strand},
/**
  * @export
  * @type {Array} */
MXMLDescriptor: {
get: org.apache.royale.core.ItemRendererClassFactory.prototype.get__MXMLDescriptor}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ItemRendererClassFactory', qName: 'org.apache.royale.core.ItemRendererClassFactory', kind: 'class' }], interfaces: [org.apache.royale.core.IItemRendererClassFactory, org.apache.royale.core.IDocument, org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.ItemRendererClassFactory.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'mxmlContent': { type: 'Array'},
        'createFunction': { type: 'Function'},
        'itemRendererFactory': { type: 'org.apache.royale.core.IFactory'}
      };
    },
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory'},
        'MXMLDescriptor': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory'}
      };
    },
    methods: function () {
      return {
        'ItemRendererClassFactory': { type: '', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory'},
        'createItemRenderer': { type: 'org.apache.royale.core.IItemRenderer', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IItemRendererParent', optional: false } ]; }},
        'createFromClass': { type: 'org.apache.royale.core.IItemRenderer', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IItemRendererParent', optional: false } ]; }},
        'setDocument': { type: 'void', declaredBy: 'org.apache.royale.core.ItemRendererClassFactory', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'String', optional: true } ]; }}
      };
    },
    metadata: function () { return [  ]; }
  };
};
