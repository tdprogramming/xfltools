/**
 * Generated by Apache Royale Compiler from org\apache\royale\html\DataGrid.as
 * org.apache.royale.html.DataGrid
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.DataGrid');
/* Royale Dependency List: org.apache.royale.core.IBead,org.apache.royale.core.IChangePropagator,org.apache.royale.core.IDataGridModel,org.apache.royale.core.IDataGridPresentationModel,org.apache.royale.core.ValuesManager,org.apache.royale.events.Event,org.apache.royale.utils.loadBeadFromValuesManager,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.GroupBase');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.GroupBase}
 */
org.apache.royale.html.DataGrid = function() {
  org.apache.royale.html.DataGrid.base(this, 'constructor');
  this.typeNames = "DataGrid";
  this.width = 200;
  this.height = 200;
};
goog.inherits(org.apache.royale.html.DataGrid, org.apache.royale.core.GroupBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.DataGrid', org.apache.royale.html.DataGrid);


/**
 * @private
 * @type {org.apache.royale.core.IDataGridPresentationModel}
 */
org.apache.royale.html.DataGrid.prototype._presentationModel;


/**
 * @export
 * @override
 */
org.apache.royale.html.DataGrid.prototype.addedToParent = function() {
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IChangePropagator, "iChangePropagator", this);
  org.apache.royale.html.DataGrid.superClass_.addedToParent.apply(this);
  this.dispatchEvent(new org.apache.royale.events.Event("initComplete"));
};


org.apache.royale.html.DataGrid.prototype.get__columns = function() {
  return org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).columns;
};


org.apache.royale.html.DataGrid.prototype.set__columns = function(value) {
  org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).columns = value;
};


org.apache.royale.html.DataGrid.prototype.get__dataProvider = function() {
  return org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).dataProvider;
};


org.apache.royale.html.DataGrid.prototype.set__dataProvider = function(value) {
  org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).dataProvider = value;
};


org.apache.royale.html.DataGrid.prototype.get__selectedIndex = function() {
  return org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).selectedIndex;
};


org.apache.royale.html.DataGrid.prototype.set__selectedIndex = function(value) {
  org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.IDataGridModel, true).selectedIndex = value;
};


org.apache.royale.html.DataGrid.prototype.get__presentationModel = function() {
  if (this._presentationModel == null) {
    var /** @type {Object} */ c = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "iDataGridPresentationModel");
    if (c) {
      var /** @type {Object} */ presModel = new c();
      this._presentationModel = org.apache.royale.utils.Language.as(presModel, org.apache.royale.core.IDataGridPresentationModel);
      if (this._presentationModel != null) {
        this.addBead(org.apache.royale.utils.Language.as(this._presentationModel, org.apache.royale.core.IBead));
      }
    }
  }
  return this._presentationModel;
};


org.apache.royale.html.DataGrid.prototype.set__presentationModel = function(value) {
  this._presentationModel = value;
};


org.apache.royale.html.DataGrid.prototype.get__rowHeight = function() {
  return this.presentationModel.rowHeight;
};


org.apache.royale.html.DataGrid.prototype.set__rowHeight = function(value) {
  this.presentationModel.rowHeight = value;
};


Object.defineProperties(org.apache.royale.html.DataGrid.prototype, /** @lends {org.apache.royale.html.DataGrid.prototype} */ {
/**
  * @export
  * @type {Array} */
columns: {
get: org.apache.royale.html.DataGrid.prototype.get__columns,
set: org.apache.royale.html.DataGrid.prototype.set__columns},
/**
  * @export
  * @type {Object} */
dataProvider: {
get: org.apache.royale.html.DataGrid.prototype.get__dataProvider,
set: org.apache.royale.html.DataGrid.prototype.set__dataProvider},
/**
  * @export
  * @type {number} */
selectedIndex: {
get: org.apache.royale.html.DataGrid.prototype.get__selectedIndex,
set: org.apache.royale.html.DataGrid.prototype.set__selectedIndex},
/**
  * @export
  * @type {org.apache.royale.core.IDataGridPresentationModel} */
presentationModel: {
get: org.apache.royale.html.DataGrid.prototype.get__presentationModel,
set: org.apache.royale.html.DataGrid.prototype.set__presentationModel},
/**
  * @export
  * @type {number} */
rowHeight: {
get: org.apache.royale.html.DataGrid.prototype.get__rowHeight,
set: org.apache.royale.html.DataGrid.prototype.set__rowHeight}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.DataGrid.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataGrid', qName: 'org.apache.royale.html.DataGrid', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.DataGrid.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'columns': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.html.DataGrid'},
        'dataProvider': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.html.DataGrid'},
        'selectedIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.html.DataGrid', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'presentationModel': { type: 'org.apache.royale.core.IDataGridPresentationModel', access: 'readwrite', declaredBy: 'org.apache.royale.html.DataGrid'},
        'rowHeight': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html.DataGrid'}
      };
    },
    methods: function () {
      return {
        'DataGrid': { type: '', declaredBy: 'org.apache.royale.html.DataGrid'},
        'addedToParent': { type: 'void', declaredBy: 'org.apache.royale.html.DataGrid'}
      };
    },
    metadata: function () { return [  ]; }
  };
};
