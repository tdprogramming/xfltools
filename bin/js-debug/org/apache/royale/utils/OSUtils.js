/**
 * Generated by Apache Royale Compiler from org\apache\royale\utils\OSUtils.as
 * org.apache.royale.utils.OSUtils
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.OSUtils');
/* Royale Dependency List: */



/**
 * @constructor
 */
org.apache.royale.utils.OSUtils = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.utils.OSUtils', org.apache.royale.utils.OSUtils);


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.OSUtils.MAC_OS = "MacOS";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.OSUtils.WIN_OS = "Windows";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.OSUtils.LINUX_OS = "Linux";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.OSUtils.UNIX_OS = "UNIX";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.OSUtils.UNKNOWN_OS = "Unknown OS";


/**
 * Gets the name of the operating system.
 * @export
 * @return {string}
 */
org.apache.royale.utils.OSUtils.getOS = function() {
  
  if (!org.apache.royale.utils.OSUtils._osName) {
    org.apache.royale.utils.OSUtils._osName = "Unknown OS";
    var /** @type {string} */ appVersion = navigator.appVersion;
    if (appVersion.indexOf("Win") != -1)
      org.apache.royale.utils.OSUtils._osName = "Windows";
    if (appVersion.indexOf("Mac") != -1)
      org.apache.royale.utils.OSUtils._osName = "MacOS";
    if (appVersion.indexOf("X11") != -1)
      org.apache.royale.utils.OSUtils._osName = "UNIX";
    if (appVersion.indexOf("Linux") != -1)
      org.apache.royale.utils.OSUtils._osName = "Linux";
  }
  return org.apache.royale.utils.OSUtils._osName;
};


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.OSUtils._osName;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.OSUtils.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'OSUtils', qName: 'org.apache.royale.utils.OSUtils', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.OSUtils.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'OSUtils': { type: '', declaredBy: 'org.apache.royale.utils.OSUtils'},
        '|getOS': { type: 'String', declaredBy: 'org.apache.royale.utils.OSUtils'}
      };
    }
  };
};
