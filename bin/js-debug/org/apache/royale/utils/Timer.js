/**
 * Generated by Apache Royale Compiler from org\apache\royale\utils\Timer.as
 * org.apache.royale.utils.Timer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.Timer');
/* Royale Dependency List: org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.events.EventDispatcher');



/**
 *  Constructor.
 * 
 *  @asparam delay The number of milliseconds 
 *  to wait before dispatching the event.
 *  @asparam repeatCount The number of times to dispatch
 *  the event.  If 0, keep dispatching forever.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 * @param {number} delay
 * @param {number=} repeatCount
 */
org.apache.royale.utils.Timer = function(delay, repeatCount) {
  org.apache.royale.utils.Timer.base(this, 'constructor');
  repeatCount = typeof repeatCount !== 'undefined' ? repeatCount : 0;
  this.delay = delay;
  this.repeatCount = repeatCount;
};
goog.inherits(org.apache.royale.utils.Timer, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.utils.Timer', org.apache.royale.utils.Timer);


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.utils.Timer.TIMER = "timer";


/**
 * @export
 * @type {number}
 */
org.apache.royale.utils.Timer.prototype.delay;


/**
 * @export
 * @type {number}
 */
org.apache.royale.utils.Timer.prototype.repeatCount = 0;


/**
 * @export
 * @return {boolean}
 */
org.apache.royale.utils.Timer.prototype.running = function() {
  return this.timerInterval != -1;
};


/**
 * @private
 * @type {number}
 */
org.apache.royale.utils.Timer.prototype._currentCount = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.utils.Timer.prototype.timerInterval = -1;


/**
 * @export
 */
org.apache.royale.utils.Timer.prototype.reset = function() {
  this.stop();
  this._currentCount = 0;
};


/**
 * @export
 */
org.apache.royale.utils.Timer.prototype.stop = function() {
  clearInterval(this.timerInterval);
  this.timerInterval = -1;
};


/**
 * @export
 */
org.apache.royale.utils.Timer.prototype.start = function() {
  if (this.timerInterval != -1)
    return;
  this.timerInterval = setInterval(org.apache.royale.utils.Language.closure(this.timerHandler, this, 'timerHandler'), this.delay);
};


/**
 * @private
 */
org.apache.royale.utils.Timer.prototype.timerHandler = function() {
  if (this.timerInterval == -1)
    return;
  this._currentCount++;
  if (this.repeatCount > 0 && this.currentCount >= this.repeatCount) {
    this.stop();
  }
  this.dispatchEvent(new org.apache.royale.events.Event('timer'));
};


org.apache.royale.utils.Timer.prototype.get__currentCount = function() {
  return this._currentCount;
};


Object.defineProperties(org.apache.royale.utils.Timer.prototype, /** @lends {org.apache.royale.utils.Timer.prototype} */ {
/**
  * @export
  * @type {number} */
currentCount: {
get: org.apache.royale.utils.Timer.prototype.get__currentCount}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.Timer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Timer', qName: 'org.apache.royale.utils.Timer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.Timer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'delay': { type: 'Number'},
        'repeatCount': { type: 'int'}
      };
    },
    accessors: function () {
      return {
        'currentCount': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.utils.Timer'}
      };
    },
    methods: function () {
      return {
        'Timer': { type: '', declaredBy: 'org.apache.royale.utils.Timer', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'int', optional: true } ]; }},
        'running': { type: 'Boolean', declaredBy: 'org.apache.royale.utils.Timer'},
        'reset': { type: 'void', declaredBy: 'org.apache.royale.utils.Timer'},
        'stop': { type: 'void', declaredBy: 'org.apache.royale.utils.Timer'},
        'start': { type: 'void', declaredBy: 'org.apache.royale.utils.Timer'}
      };
    }
  };
};
