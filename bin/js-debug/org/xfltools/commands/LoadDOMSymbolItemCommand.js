/**
 * Generated by Apache Royale Compiler from org\xfltools\commands\LoadDOMSymbolItemCommand.as
 * org.xfltools.commands.LoadDOMSymbolItemCommand
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.xfltools.commands.LoadDOMSymbolItemCommand');
/* Royale Dependency List: XML,flash.events.Event,flash.net.URLLoader,flash.net.URLRequest,org.xfltools.xfldom.DOMLibrary,org.xfltools.xfldom.DOMSymbolItem,org.apache.royale.utils.Language*/

goog.require('org.xfltools.commands.AbstractCommand');



/**
 * @constructor
 * @extends {org.xfltools.commands.AbstractCommand}
 * @param {string} fileURL
 * @param {org.xfltools.xfldom.DOMLibrary} domLibrary
 */
org.xfltools.commands.LoadDOMSymbolItemCommand = function(fileURL, domLibrary) {
  org.xfltools.commands.LoadDOMSymbolItemCommand.base(this, 'constructor');
  this._fileURL = fileURL;
  this._domLibrary = domLibrary;
};
goog.inherits(org.xfltools.commands.LoadDOMSymbolItemCommand, org.xfltools.commands.AbstractCommand);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.xfltools.commands.LoadDOMSymbolItemCommand', org.xfltools.commands.LoadDOMSymbolItemCommand);


/**
 * @private
 * @type {string}
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype._fileURL;


/**
 * @private
 * @type {org.xfltools.xfldom.DOMLibrary}
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype._domLibrary;


/**
 * @export
 * @override
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype.execute = function() {
  var /** @type {flash.net.URLLoader} */ urlLoader = new flash.net.URLLoader();
  urlLoader.addEventListener(flash.events.Event.COMPLETE, org.apache.royale.utils.Language.closure(this.onLoadComplete, this, 'onLoadComplete'));
  urlLoader.load(new flash.net.URLRequest(this._fileURL));
};


/**
 * @private
 * @param {flash.events.Event} event
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype.onLoadComplete = function(event) {
  var /** @type {flash.net.URLLoader} */ urlLoader = org.apache.royale.utils.Language.as(event.target, flash.net.URLLoader);
  urlLoader.removeEventListener(flash.events.Event.COMPLETE, org.apache.royale.utils.Language.closure(this.onLoadComplete, this, 'onLoadComplete'));
  var /** @type {XML} */ xml = new XML(urlLoader.data);
  var /** @type {org.xfltools.xfldom.DOMSymbolItem} */ domSymbolItem = new org.xfltools.xfldom.DOMSymbolItem();
  domSymbolItem.fromXML(xml);
  this._domLibrary.addSymbol(domSymbolItem);
  this.complete();
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'LoadDOMSymbolItemCommand', qName: 'org.xfltools.commands.LoadDOMSymbolItemCommand', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.xfltools.commands.LoadDOMSymbolItemCommand.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'LoadDOMSymbolItemCommand': { type: '', declaredBy: 'org.xfltools.commands.LoadDOMSymbolItemCommand', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'org.xfltools.xfldom.DOMLibrary', optional: false } ]; }},
        'execute': { type: 'void', declaredBy: 'org.xfltools.commands.LoadDOMSymbolItemCommand'}
      };
    }
  };
};
