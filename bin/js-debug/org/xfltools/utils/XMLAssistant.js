/**
 * Generated by Apache Royale Compiler from org\xfltools\utils\XMLAssistant.as
 * org.xfltools.utils.XMLAssistant
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.xfltools.utils.XMLAssistant');
/* Royale Dependency List: XML,flash.geom.Point*/




/**
 * @constructor
 */
org.xfltools.utils.XMLAssistant = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.xfltools.utils.XMLAssistant', org.xfltools.utils.XMLAssistant);


/**
 * @export
 * @param {XML} xml
 * @param {Array} childNames
 * @return {Array}
 */
org.xfltools.utils.XMLAssistant.getChildList = function(xml, childNames) {
  var /** @type {Array} */ result = org.apache.royale.utils.Language.Vector();
  while (childNames.length > 1) {
    var /** @type {Array} */ childList = org.xfltools.utils.XMLAssistant.getChildListByName(xml, childNames.shift());
    if (!childList.length) {
      break;
    }
    xml = childList[0];
  }
  if (xml) {
    for (var /** @type {number} */ i = 0; i < xml.children().length(); i++) {
      if (xml.children()[i].localName() == childNames[0]) {
        result.push(xml.children()[i]);
      }
    }
  }
  return result;
};


/**
 * @private
 * @param {XML} xml
 * @param {string} childName
 * @return {Array}
 */
org.xfltools.utils.XMLAssistant.getChildListByName = function(xml, childName) {
  var /** @type {Array} */ result = org.apache.royale.utils.Language.Vector();
  for (var /** @type {number} */ i = 0; i < xml.children().length(); i++) {
    if (xml.children()[i].localName() == childName) {
      result.push(xml.children()[i]);
    }
  }
  return result;
};


/**
 * @export
 * @param {string} input
 * @return {flash.geom.Point}
 */
org.xfltools.utils.XMLAssistant.stringToPoint = function(input) {
  var /** @type {Array} */ splitInput = input.split(",");
  return new flash.geom.Point(parseFloat(splitInput[0]), parseFloat(splitInput[1]));
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.xfltools.utils.XMLAssistant.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'XMLAssistant', qName: 'org.xfltools.utils.XMLAssistant', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.xfltools.utils.XMLAssistant.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        '|getChildList': { type: 'Vector.<XML>', declaredBy: 'org.xfltools.utils.XMLAssistant', parameters: function () { return [  { index: 1, type: 'XML', optional: false },{ index: 2, type: 'Array', optional: false } ]; }},
        '|stringToPoint': { type: 'flash.geom.Point', declaredBy: 'org.xfltools.utils.XMLAssistant', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }}
      };
    }
  };
};
