/**
 * Generated by Apache Royale Compiler from org\xfltools\xfldom\DOMLayer.as
 * org.xfltools.xfldom.DOMLayer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.xfltools.xfldom.DOMLayer');
/* Royale Dependency List: XML,flash.display.DisplayObject,flash.display.MovieClip,org.xfltools.utils.XMLAssistant,org.xfltools.xfldom.DOMFrame,org.apache.royale.utils.Language*/

goog.require('org.xfltools.xfldom.IDOMComponent');
goog.require('org.xfltools.xfldom.IDOMFrameElement');



/**
 * @constructor
 * @implements {org.xfltools.xfldom.IDOMComponent}
 * @implements {org.xfltools.xfldom.IDOMFrameElement}
 */
org.xfltools.xfldom.DOMLayer = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.xfltools.xfldom.DOMLayer', org.xfltools.xfldom.DOMLayer);


/**
 * @private
 * @type {Array}
 */
org.xfltools.xfldom.DOMLayer.prototype._frames;


/**
 * @private
 * @type {string}
 */
org.xfltools.xfldom.DOMLayer.prototype._name;


/**
 * @private
 * @type {string}
 */
org.xfltools.xfldom.DOMLayer.prototype._color;


/**
 * @private
 * @type {boolean}
 */
org.xfltools.xfldom.DOMLayer.prototype._current;


/**
 * @private
 * @type {boolean}
 */
org.xfltools.xfldom.DOMLayer.prototype._isSelected;


/**
 * @export
 * @param {XML} xml
 */
org.xfltools.xfldom.DOMLayer.prototype.fromXML = function(xml) {
  this._name = org.apache.royale.utils.Language.string(xml.attribute('name'));
  this._color = org.apache.royale.utils.Language.string(xml.attribute('color'));
  this._current = xml.attribute('current') == "true";
  this._isSelected = xml.attribute('isSelected') == "true";
  this._frames = org.apache.royale.utils.Language.Vector();
  var foreachiter0_target = org.xfltools.utils.XMLAssistant.getChildList(xml, ["frames", "DOMFrame"]);
  for (var foreachiter0 in foreachiter0_target) 
  {
  var frameXML = foreachiter0_target[foreachiter0];
  {
    var /** @type {org.xfltools.xfldom.DOMFrame} */ domFrame = new org.xfltools.xfldom.DOMFrame();
    domFrame.fromXML(frameXML);
    this._frames.push(domFrame);
  }}
  
};


/**
 * @export
 * @return {flash.display.DisplayObject}
 */
org.xfltools.xfldom.DOMLayer.prototype.toDisplayObject = function() {
  var /** @type {flash.display.MovieClip} */ result = new flash.display.MovieClip();
  var foreachiter1_target = this._frames;
  for (var foreachiter1 in foreachiter1_target) 
  {
  var frame = foreachiter1_target[foreachiter1];
  {
    result.addChild(frame.toDisplayObject());
  }}
  
  return result;
};


org.xfltools.xfldom.DOMLayer.prototype.get__frames = function() {
  return this._frames;
};


Object.defineProperties(org.xfltools.xfldom.DOMLayer.prototype, /** @lends {org.xfltools.xfldom.DOMLayer.prototype} */ {
/**
  * @export
  * @type {Vector.<DOMFrame>} */
frames: {
get: org.xfltools.xfldom.DOMLayer.prototype.get__frames}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.xfltools.xfldom.DOMLayer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DOMLayer', qName: 'org.xfltools.xfldom.DOMLayer', kind: 'class' }], interfaces: [org.xfltools.xfldom.IDOMComponent, org.xfltools.xfldom.IDOMFrameElement] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.xfltools.xfldom.DOMLayer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'frames': { type: 'Vector.<org.xfltools.xfldom.DOMFrame>', access: 'readonly', declaredBy: 'org.xfltools.xfldom.DOMLayer'}
      };
    },
    methods: function () {
      return {
        'DOMLayer': { type: '', declaredBy: 'org.xfltools.xfldom.DOMLayer'},
        'fromXML': { type: 'void', declaredBy: 'org.xfltools.xfldom.DOMLayer', parameters: function () { return [  { index: 1, type: 'XML', optional: false } ]; }},
        'toDisplayObject': { type: 'flash.display.DisplayObject', declaredBy: 'org.xfltools.xfldom.DOMLayer'}
      };
    }
  };
};
